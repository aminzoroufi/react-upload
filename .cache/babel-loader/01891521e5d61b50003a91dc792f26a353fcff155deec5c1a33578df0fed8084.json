{"ast":null,"code":"var _jsxFileName = \"/Users/serpico72/Music/crypto-watchlist-main/Hello/crypto-watchlist/src/components/PriceDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intervals = {\n  daily: '1d',\n  weekly: '1w',\n  monthly: '1M',\n  yearly: '1M' // We'll fetch monthly data for a year\n};\nconst PriceDisplay = ({\n  watchList\n}) => {\n  _s();\n  const [prices, setPrices] = useState({});\n  const [currentPrices, setCurrentPrices] = useState({});\n  const [selectedInterval, setSelectedInterval] = useState('daily');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      setLoading(true);\n      const newPrices = {};\n      for (const pair of watchList) {\n        try {\n          const interval = intervals[selectedInterval];\n          const limit = selectedInterval === 'yearly' ? 12 : selectedInterval === 'monthly' ? 30 : selectedInterval === 'weekly' ? 52 : 365;\n          const response = await axios.get('https://api.binance.com/api/v3/klines', {\n            params: {\n              symbol: pair,\n              interval: interval,\n              limit: limit\n            }\n          });\n          const data = response.data.map(item => ({\n            time: item[0],\n            price: parseFloat(item[4]) // Closing price\n          }));\n          newPrices[pair] = {\n            time: data.map(d => d.time),\n            price: data.map(d => d.price)\n          };\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      }\n      setPrices(newPrices);\n      setLoading(false);\n    };\n    if (watchList.length > 0) {\n      fetchHistoricalData();\n    } else {\n      setPrices({});\n    }\n  }, [watchList, selectedInterval]);\n\n  // Fetch real-time price updates\n  useEffect(() => {\n    let ws;\n    if (watchList.length > 0) {\n      const streams = watchList.map(pair => `${pair.toLowerCase()}@ticker`).join('/');\n      ws = new WebSocket(`wss://stream.binance.com:9443/stream?streams=${streams}`);\n      ws.onmessage = event => {\n        const message = JSON.parse(event.data);\n        const symbol = message.data.s;\n        const price = parseFloat(message.data.c); // Current price\n        setCurrentPrices(prevPrices => ({\n          ...prevPrices,\n          [symbol]: price\n        }));\n      };\n    }\n    return () => {\n      if (ws) ws.close();\n    };\n  }, [watchList]);\n  const getOption = pair => {\n    var _prices$pair, _prices$pair2;\n    return {\n      title: {\n        text: pair,\n        left: 'center',\n        textStyle: {\n          color: '#e0e0e0'\n        }\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: (_prices$pair = prices[pair]) === null || _prices$pair === void 0 ? void 0 : _prices$pair.time.map(t => new Date(t).toLocaleDateString()),\n        axisLabel: {\n          color: '#e0e0e0'\n        }\n      },\n      yAxis: {\n        type: 'value',\n        axisLabel: {\n          color: '#e0e0e0'\n        }\n      },\n      series: [{\n        data: (_prices$pair2 = prices[pair]) === null || _prices$pair2 === void 0 ? void 0 : _prices$pair2.price,\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n          color: '#bb86fc'\n        }\n      }],\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section price-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interval-buttons\",\n      children: ['daily', 'weekly', 'monthly', 'yearly'].map(interval => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedInterval(interval),\n        className: selectedInterval === interval ? 'active' : '',\n        children: interval.charAt(0).toUpperCase() + interval.slice(1)\n      }, interval, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : watchList.map(pair => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(ReactEcharts, {\n        option: getOption(pair),\n        style: {\n          height: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-price\",\n        children: [\"Current Price: $\", currentPrices[pair] ? currentPrices[pair].toFixed(2) : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, pair, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(PriceDisplay, \"v3xsvFTVXPTjNrN9IRh1oJwKMcc=\");\n_c = PriceDisplay;\nexport default PriceDisplay;\nvar _c;\n$RefreshReg$(_c, \"PriceDisplay\");","map":{"version":3,"names":["React","useEffect","useState","ReactEcharts","axios","jsxDEV","_jsxDEV","intervals","daily","weekly","monthly","yearly","PriceDisplay","watchList","_s","prices","setPrices","currentPrices","setCurrentPrices","selectedInterval","setSelectedInterval","loading","setLoading","fetchHistoricalData","newPrices","pair","interval","limit","response","get","params","symbol","data","map","item","time","price","parseFloat","d","error","console","length","ws","streams","toLowerCase","join","WebSocket","onmessage","event","message","JSON","parse","s","c","prevPrices","close","getOption","_prices$pair","_prices$pair2","title","text","left","textStyle","color","tooltip","trigger","xAxis","type","t","Date","toLocaleDateString","axisLabel","yAxis","series","smooth","lineStyle","grid","right","bottom","containLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","charAt","toUpperCase","slice","option","style","height","toFixed","_c","$RefreshReg$"],"sources":["/Users/serpico72/Music/crypto-watchlist-main/Hello/crypto-watchlist/src/components/PriceDisplay.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport axios from 'axios';\n\ninterface PriceDisplayProps {\n  watchList: string[];\n}\n\ninterface PriceData {\n  [key: string]: {\n    time: number[];\n    price: number[];\n  };\n}\n\nconst intervals = {\n  daily: '1d',\n  weekly: '1w',\n  monthly: '1M',\n  yearly: '1M', // We'll fetch monthly data for a year\n};\n\nconst PriceDisplay: React.FC<PriceDisplayProps> = ({ watchList }) => {\n  const [prices, setPrices] = useState<PriceData>({});\n  const [currentPrices, setCurrentPrices] = useState<{ [key: string]: number }>({});\n  const [selectedInterval, setSelectedInterval] = useState<'daily' | 'weekly' | 'monthly' | 'yearly'>('daily');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      setLoading(true);\n      const newPrices: PriceData = {};\n      for (const pair of watchList) {\n        try {\n          const interval = intervals[selectedInterval];\n          const limit = selectedInterval === 'yearly' ? 12 : selectedInterval === 'monthly' ? 30 : selectedInterval === 'weekly' ? 52 : 365;\n          const response = await axios.get('https://api.binance.com/api/v3/klines', {\n            params: {\n              symbol: pair,\n              interval: interval,\n              limit: limit,\n            },\n          });\n          const data = response.data.map((item: any) => ({\n            time: item[0],\n            price: parseFloat(item[4]), // Closing price\n          }));\n          newPrices[pair] = {\n            time: data.map((d: any) => d.time),\n            price: data.map((d: any) => d.price),\n          };\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      }\n      setPrices(newPrices);\n      setLoading(false);\n    };\n\n    if (watchList.length > 0) {\n      fetchHistoricalData();\n    } else {\n      setPrices({});\n    }\n  }, [watchList, selectedInterval]);\n\n  // Fetch real-time price updates\n  useEffect(() => {\n    let ws: WebSocket;\n    if (watchList.length > 0) {\n      const streams = watchList.map((pair) => `${pair.toLowerCase()}@ticker`).join('/');\n      ws = new WebSocket(`wss://stream.binance.com:9443/stream?streams=${streams}`);\n\n      ws.onmessage = (event) => {\n        const message = JSON.parse(event.data);\n        const symbol = message.data.s;\n        const price = parseFloat(message.data.c); // Current price\n        setCurrentPrices((prevPrices) => ({ ...prevPrices, [symbol]: price }));\n      };\n    }\n    return () => {\n      if (ws) ws.close();\n    };\n  }, [watchList]);\n\n  const getOption = (pair: string) => {\n    return {\n      title: {\n        text: pair,\n        left: 'center',\n        textStyle: {\n          color: '#e0e0e0',\n        },\n      },\n      tooltip: {\n        trigger: 'axis',\n      },\n      xAxis: {\n        type: 'category',\n        data: prices[pair]?.time.map((t) => new Date(t).toLocaleDateString()),\n        axisLabel: {\n          color: '#e0e0e0',\n        },\n      },\n      yAxis: {\n        type: 'value',\n        axisLabel: {\n          color: '#e0e0e0',\n        },\n      },\n      series: [\n        {\n          data: prices[pair]?.price,\n          type: 'line',\n          smooth: true,\n          lineStyle: {\n            color: '#bb86fc',\n          },\n        },\n      ],\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true,\n      },\n    };\n  };\n\n  return (\n    <div className=\"section price-display\">\n      <h2>Real-Time Prices</h2>\n      <div className=\"interval-buttons\">\n        {(['daily', 'weekly', 'monthly', 'yearly'] as const).map((interval) => (\n          <button\n            key={interval}\n            onClick={() => setSelectedInterval(interval)}\n            className={selectedInterval === interval ? 'active' : ''}\n          >\n            {interval.charAt(0).toUpperCase() + interval.slice(1)}\n          </button>\n        ))}\n      </div>\n      {loading ? (\n        <div className=\"spinner\"></div>\n      ) : (\n        watchList.map((pair) => (\n          <div key={pair} className=\"chart-container\">\n            <ReactEcharts option={getOption(pair)} style={{ height: '300px' }} />\n            <div className=\"current-price\">\n              Current Price: ${currentPrices[pair] ? currentPrices[pair].toFixed(2) : 'Loading...'}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PriceDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}